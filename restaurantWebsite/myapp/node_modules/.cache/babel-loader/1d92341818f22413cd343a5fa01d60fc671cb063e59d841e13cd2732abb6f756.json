{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\SharpnerReact\\\\ReactProjects\\\\restaurantWebsite\\\\myapp\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartProvider = props => {\n  _s();\n  const [items, setItems] = useState([]);\n  const addItemToCartHandler = newItems => {\n    const existingItemIndex = items.findIndex(item => item.id === newItems.id);\n    const existingCartItem = items[existingItemIndex];\n    console.log(existingItemIndex, existingCartItem);\n    let updatedItem;\n    let updatedItems;\n    if (existingCartItem) {\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + newItems.amount\n      };\n      updatedItems = [...items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItem = [...items];\n      updatedItems = updatedItem;\n    }\n    setItems(updatedItems);\n    console.log(updatedItem);\n    console.log(updatedItems);\n  };\n  const removeItemFromCartHAndler = id => {\n    let updatedItem = items.filter(item => {\n      if (item.id !== id) return item;\n    });\n    setItems(updatedItem);\n  };\n\n  // const total=items.map((item)=>)\n  const total = items.reduce((curNumber, item) => {\n    return curNumber + item.amount * item.price;\n  }, 0);\n  const cartContext = {\n    items: items,\n    totalAmount: total,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHAndler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"57SJuCrh2mzvqkAcA91jrZTeEcE=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useState","CartContext","jsxDEV","_jsxDEV","CartProvider","props","_s","items","setItems","addItemToCartHandler","newItems","existingItemIndex","findIndex","item","id","existingCartItem","console","log","updatedItem","updatedItems","amount","removeItemFromCartHAndler","filter","total","reduce","curNumber","price","cartContext","totalAmount","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arpit/Documents/SharpnerReact/ReactProjects/restaurantWebsite/myapp/src/store/CartProvider.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CartContext from \"./cart-context\"\r\n\r\nconst CartProvider= props=>{\r\n    const[items,setItems]=useState([])\r\n \r\nconst addItemToCartHandler=(newItems)=>{\r\n   const existingItemIndex=items.findIndex((item)=> item.id===newItems.id)\r\n   const existingCartItem=items[existingItemIndex];\r\n   console.log(existingItemIndex,existingCartItem);\r\nlet updatedItem;\r\nlet updatedItems;\r\n   if(existingCartItem){\r\n   updatedItem={\r\n    ...existingCartItem,\r\n    amount:existingCartItem.amount + newItems.amount\r\n   }\r\n   \r\n   updatedItems=[...items];\r\n   updatedItems[existingItemIndex]=updatedItem\r\n   }\r\n   else{\r\n    updatedItem=[...items]\r\n    updatedItems=updatedItem\r\n   }\r\n   setItems(updatedItems);\r\n   console.log(updatedItem);\r\n   console.log(updatedItems);\r\n}\r\n\r\n\r\nconst removeItemFromCartHAndler=(id)=>{\r\n let updatedItem=  items.filter((item)=>{\r\n      if(item.id!==id)\r\n      return item;\r\n   })\r\n\r\n   setItems(updatedItem);\r\n}\r\n\r\n// const total=items.map((item)=>)\r\nconst total=items.reduce((curNumber,item)=>{\r\n    return curNumber+(item.amount*item.price);\r\n  },0)\r\n\r\nconst cartContext={\r\n    items:items,\r\n    totalAmount:total,\r\n    addItem:addItemToCartHandler,\r\n    removeItem:removeItemFromCartHAndler\r\n}\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n\r\n}\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAEC,KAAK,IAAE;EAAAC,EAAA;EACvB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,oBAAoB,GAAEC,QAAQ,IAAG;IACpC,MAAMC,iBAAiB,GAACJ,KAAK,CAACK,SAAS,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAGJ,QAAQ,CAACI,EAAE,CAAC;IACvE,MAAMC,gBAAgB,GAACR,KAAK,CAACI,iBAAiB,CAAC;IAC/CK,OAAO,CAACC,GAAG,CAACN,iBAAiB,EAACI,gBAAgB,CAAC;IAClD,IAAIG,WAAW;IACf,IAAIC,YAAY;IACb,IAAGJ,gBAAgB,EAAC;MACpBG,WAAW,GAAC;QACX,GAAGH,gBAAgB;QACnBK,MAAM,EAACL,gBAAgB,CAACK,MAAM,GAAGV,QAAQ,CAACU;MAC3C,CAAC;MAEDD,YAAY,GAAC,CAAC,GAAGZ,KAAK,CAAC;MACvBY,YAAY,CAACR,iBAAiB,CAAC,GAACO,WAAW;IAC3C,CAAC,MACG;MACHA,WAAW,GAAC,CAAC,GAAGX,KAAK,CAAC;MACtBY,YAAY,GAACD,WAAW;IACzB;IACAV,QAAQ,CAACW,YAAY,CAAC;IACtBH,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;IACxBF,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;EAC5B,CAAC;EAGD,MAAME,yBAAyB,GAAEP,EAAE,IAAG;IACrC,IAAII,WAAW,GAAGX,KAAK,CAACe,MAAM,CAAET,IAAI,IAAG;MAClC,IAAGA,IAAI,CAACC,EAAE,KAAGA,EAAE,EACf,OAAOD,IAAI;IACd,CAAC,CAAC;IAEFL,QAAQ,CAACU,WAAW,CAAC;EACxB,CAAC;;EAED;EACA,MAAMK,KAAK,GAAChB,KAAK,CAACiB,MAAM,CAAC,CAACC,SAAS,EAACZ,IAAI,KAAG;IACvC,OAAOY,SAAS,GAAEZ,IAAI,CAACO,MAAM,GAACP,IAAI,CAACa,KAAM;EAC3C,CAAC,EAAC,CAAC,CAAC;EAEN,MAAMC,WAAW,GAAC;IACdpB,KAAK,EAACA,KAAK;IACXqB,WAAW,EAACL,KAAK;IACjBM,OAAO,EAACpB,oBAAoB;IAC5BqB,UAAU,EAACT;EACf,CAAC;EAEG,oBAAOlB,OAAA,CAACF,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAEL,WAAY;IAAAM,QAAA,EAC3C5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE3B,CAAC;AAAA/B,EAAA,CArDKF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}